{"version":3,"sources":["firebase.js","components/HomePage.js","components/AdminPage.js","components/OrderSetupPage.js","components/StockSetupPage.js","components/UserSetupPage.js","App.js","serviceWorker.js","index.js"],"names":["db","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","userCollection","collection","equipmentCollection","orderCollection","HomePage","useState","username","setUsername","password","setPassword","redirect","setRedirect","to","class","type","id","placeholder","value","onChange","e","target","required","onClick","window","alert","doc","get","then","exists","data","catch","error","AdminPage","href","UserSetupPage","lists","setLists","preventDefault","tmpLists","querySnapshot","forEach","orderStatus","status","taskformat","name","address","phone","product","amount","push","setTimeout","map","Item","key","s","console","log","set","location","reload","delete","StockSetupPage","nameEquipment","setNameEquipment","setAmount","price","setPrice","setStatus","isNaN","parseInt","parseFloat","nameUser","setNameUser","App","exact","path","component","OrderSetupPage","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.871ac103.chunk.js","sourcesContent":["import { initializeApp } from 'firebase'\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCl4bWIuax5F82LXVfyUXSzOteknpQjRn4\",\n    authDomain: \"yadashop-3e07d.firebaseapp.com\",\n    databaseURL: \"https://yadashop-3e07d.firebaseio.com\",\n    projectId: \"yadashop-3e07d\",\n    storageBucket: \"yadashop-3e07d.appspot.com\",\n    messagingSenderId: \"216458170250\",\n    appId: \"1:216458170250:web:60fab8648752977e008273\",\n    measurementId: \"G-GQK0BSQVG2\"\n};\n\nconst app = initializeApp(firebaseConfig)\n\nexport const db = app.firestore()\nexport const userCollection = db.collection('user')\nexport const equipmentCollection = db.collection('equipment')\nexport const orderCollection = db.collection('order')","import React, { useState } from 'react';\nimport { userCollection } from '../firebase'\nimport { Redirect } from \"react-router-dom\";\n\nimport '../css/HomePage.css';\n\nexport default function HomePage(){\n    const [username , setUsername] = useState(\"\")\n    const [password , setPassword] = useState(\"\")\n    const [redirect , setRedirect] = useState(false)\n\n    const login = (e) => {\n        if(username == '' || password == ''){\n            window.alert(\"Please try again\");\n        }else{\n            userCollection.doc(username)\n            .get()\n            .then(function(doc) {\n            if (doc.exists) {\n                if(password == doc.data().password){\n                    setUsername(\"\")\n                    setPassword(\"\")\n                    setRedirect(true)\n                    return true\n                }\n                window.alert(\"invalid password\");\n            } else {\n                window.alert(\"invalid username\");\n            }\n            }).catch(function(error) {\n                window.alert(error);\n            })\n        }\n        setUsername(\"\")\n        setPassword(\"\")\n        setRedirect(false)\n        return false\n    }\n\n    if(redirect){\n        return <Redirect to=\"/AdminPage\"/>\n    }\n\n    return (\n        <div>\n            <header class=\"header\">\n                <input type=\"text\" class=\"form_user\" id=\"Username\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)} required=\"\"/>\n                <input type=\"password\" class=\"form_pass\" id=\"Password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} required=\"\"/>\n                <button type=\"submit\" class=\"form_login\" onClick={login}>Login</button>\n            </header>\n            <body class=\"body\">\n                YadaShop\n            </body>\n            <footer class=\"footer\">\n            </footer>\n        </div>\n    );\n}\n","import React from 'react';\nimport '../css/AdminPage.css';\n\nexport default function AdminPage(){\n    \n    return (\n        <div>\n            <header class=\"header-admin\">\n                <div class=\"brand-box\">\n                    <span class=\"brand\">Admin</span>\n                </div>\n    \n                <div class=\"text-box\">\n                    <h1 class=\"heading-primary\">\n                        <span class=\"heading-primary-main\">Management</span>\n                        <span class=\"heading-primary-sub\">Please select</span>\n                    </h1>\n                    <a href=\"/UserSetupPage\" class=\"btn btn-white btn-animated\">User</a>\n                    <a href=\"/StockSetupPage\" class=\"btn btn-white btn-animated\">Stock</a>\n                    <a href=\"/OrderSetupPage\" class=\"btn btn-white btn-animated\">Order</a>\n                    <a href=\"/\" class=\"btn btn-white btn-animated\">Logout</a>\n                </div>\n            </header>\n        </div>\n    );\n}","import React, { useState } from 'react';\nimport { orderCollection } from '../firebase'\nimport '../css/AdminPage.css';\n\nexport default function UserSetupPage(){\n\n    const [lists , setLists] = useState([])\n\n    const readOrder = (e) => {\n        e.preventDefault()\n        const tmpLists = []\n        orderCollection.get()\n            .then(function(querySnapshot) {\n                querySnapshot.forEach(function(doc) {\n                var orderStatus = 'Pending'\n                if(doc.data().status){\n                    orderStatus = 'Done'\n                }\n                const taskformat = {\n                    id : doc.id,\n                    name : doc.data().name,\n                    address : doc.data().address,\n                    phone : doc.data().phone,\n                    product : doc.data().product,\n                    amount : doc.data().amount,\n                    status : doc.data().status,\n                    orderStatus : orderStatus\n                }\n                tmpLists.push(taskformat)\n            });\n        });\n        \n        setTimeout(function(){\n            setLists(tmpLists)\n            window.alert(\"Success\")\n        }, 500);\n    }\n\n    const updateItem = (e , s) =>{\n        console.log(e,s)\n        orderCollection.doc(e).set({\n            name : s.name,\n            address : s.address,\n            phone : s.phone,\n            product : s.product,\n            amount : s.amount,\n            status : !s.status\n        });\n        setTimeout(function(){\n            window.alert(\"Update Success!\")\n            window.location.reload()\n        }, 500);\n    }\n\n    const deleteItem = (e) =>{\n        orderCollection.doc(e).delete()\n        setTimeout(function(){\n            window.alert(\"Delete Success!\")\n            window.location.reload()\n        }, 500);\n    }\n\n    return (\n        <div>\n            <header class=\"header-admin\">\n                <div class=\"brand-box\">\n                    <span class=\"brand\">Admin</span>\n                </div>\n                <div class=\"text-box\">\n                    <h1 class=\"heading-primary\">\n                        <span class=\"heading-primary-main\">Management</span>\n                        <span class=\"heading-primary-sub\">Order</span>\n                        <a href=\"#\" class=\"btn btn-white btn-animated\" onClick={readOrder}>Get Order</a>\n                    </h1>\n                    <center>\n                    <h5 class=\"heading-primary\">\n                        <table>\n                            <tr>\n                              <th>Name</th>\n                              <th>Address</th>\n                              <th>Phone</th>\n                              <th>Product</th>\n                              <th>Amount</th>\n                              <th>Status</th>\n                              <th>Condition</th>\n                            </tr>\n                        {\n                            lists.map((Item) => {\n                                return(\n                                    <tr key={Item.id}>\n                                        <td>{Item.name}</td>\n                                        <td>{Item.address}</td>\n                                        <td>{Item.phone}</td>\n                                        <td>{Item.product}</td>\n                                        <td>{Item.amount}</td>\n                                        <td>{Item.orderStatus}</td>\n                                        <button  onClick={() => updateItem(Item.id,Item)}>update</button>\n                                        <button  onClick={() => deleteItem(Item.id)}>delete</button>\n                                    </tr>\n                                )\n                            })\n                        }\n                        </table>\n                    </h5>\n                    </center>\n                    <a href=\"/UserSetupPage\" class=\"btn btn-white btn-animated\">User</a>\n                    <a href=\"/StockSetupPage\" class=\"btn btn-white btn-animated\">Stock</a>\n                    <a href=\"/OrderSetupPage\" class=\"btn btn-white btn-animated\">Order</a>\n                    <a href=\"/\" class=\"btn btn-white btn-animated\">Logout</a>\n                </div>\n            </header>\n        </div>\n    )\n}","import React , { useState } from 'react';\nimport { equipmentCollection } from '../firebase'\nimport '../css/AdminPage.css';\n\nexport default function StockSetupPage(){\n\n    const [nameEquipment , setNameEquipment] = useState(\"\")\n    const [amount , setAmount] = useState(\"\")\n    const [price , setPrice] = useState(\"\")\n    const [status , setStatus] = useState(false)\n\n    const setEquipment = (e) => {\n        e.preventDefault()\n        if(nameEquipment == \"\" || amount == \"\" || price == \"\" || isNaN(parseInt(amount)) || isNaN(parseFloat(price))){\n            window.alert(\"Please try again\")\n            setNameEquipment(\"\")\n            setAmount(\"\")\n            setPrice(\"\")\n            setStatus(false)\n            return false\n        }\n        setStatus(false)\n        if(amount > 0){\n            setStatus(true)\n        }\n        equipmentCollection.doc(nameEquipment).set({\n            amount : parseInt(amount),\n            price : parseFloat(price),\n            status : status\n        });\n        setTimeout(function(){\n            setNameEquipment(\"\")\n            setAmount(\"\")\n            setPrice(\"\")\n            setStatus(false)\n            window.location.reload()\n        }, 500);\n        return true\n    }\n\n    const [lists , setLists] = useState([])\n\n    const readEquipment = (e) => {\n        e.preventDefault()\n        const tmpLists = []\n        equipmentCollection.get()\n            .then(function(querySnapshot) {\n                querySnapshot.forEach(function(doc) {\n                const taskformat = {\n                    name : doc.id,\n                    amount : doc.data().amount,\n                    price : doc.data().price,\n                    status : doc.data().status\n                }\n                tmpLists.push(taskformat)\n            });\n        });\n        \n        setTimeout(function(){\n            setLists(tmpLists)\n            window.alert(\"Success\")\n        }, 500);\n    }\n\n    const deleteItem = (e) =>{\n        console.log(e)\n        equipmentCollection.doc(e).delete()\n        setTimeout(function(){\n            window.alert(\"Delete Success!\")\n            window.location.reload()\n        }, 500);\n    }\n    \n    return (\n        <div>\n            <header class=\"header-admin\">\n                <div class=\"brand-box\">\n                    <span class=\"brand\">Admin</span>\n                </div>\n                <div class=\"text-box\">\n                    <h1 class=\"heading-primary\">\n                        <span class=\"heading-primary-main\">Management</span>\n                        <span class=\"heading-primary-sub\">Stock</span>\n                        <a href=\"#\" class=\"btn btn-white btn-animated\" onClick={readEquipment}>Get Stock</a>\n                    </h1>\n                    <center>\n                    <h5 class=\"heading-primary\">\n                        <table>\n                            <tr>\n                              <th>Name</th>\n                              <th>Amount</th>\n                              <th>Price</th>\n                              <th>Delete</th>\n                            </tr>\n                        {\n                            lists.map((Item) => {\n                                return(\n                                    <tr key={Item.name}>\n                                        <td>{Item.name}</td>\n                                        <td>{Item.amount}</td>\n                                        <td>{Item.price}</td>\n                                        <button  onClick={() => deleteItem(Item.name)}>delete</button>\n                                    </tr>\n                                )\n                            })\n                        }\n                        </table>\n                    </h5>\n                    </center>\n                    <h1>\n                        <form>\n                            <input type=\"text\" class=\"input-admin\" id=\"Name\" placeholder=\"Name\" value={nameEquipment} onChange={(e) => setNameEquipment(e.target.value)} required=\"\"/>\n                            <input type=\"text\" class=\"input-admin\" id=\"Price\" placeholder=\"Price\" value={price} onChange={(e) => setPrice(e.target.value)} required=\"\"/>\n                            <input type=\"text\" class=\"input-admin\" id=\"Amount\" placeholder=\"Amount\" value={amount} onChange={(e) => setAmount(e.target.value)} required=\"\"/>\n                            <div><a href=\"#\" class=\"btn btn-white btn-animated\" onClick = {setEquipment}>Add/Update</a></div>\n                        </form>\n                    </h1>\n                    <a href=\"/UserSetupPage\" class=\"btn btn-white btn-animated\">User</a>\n                    <a href=\"/StockSetupPage\" class=\"btn btn-white btn-animated\">Stock</a>\n                    <a href=\"/OrderSetupPage\" class=\"btn btn-white btn-animated\">Order</a>\n                    <a href=\"/\" class=\"btn btn-white btn-animated\">Logout</a>\n                </div>\n            </header>\n        </div>\n    )\n}","import React, { useState } from 'react';\nimport { userCollection } from '../firebase'\nimport '../css/AdminPage.css';\n\nexport default function UserSetupPage(){\n\n    //set database user\n    const [username , setUsername] = useState(\"\")\n    const [password , setPassword] = useState(\"\")\n    const [nameUser , setNameUser] = useState(\"\")\n\n    const setUsers = (e) => {\n        e.preventDefault()\n        if(username == \"\" || password == \"\" || nameUser == \"\"){\n            window.alert(\"Please try again\")\n            setUsername(\"\")\n            setPassword(\"\")\n            setNameUser(\"\")\n            return false\n        }\n        userCollection.doc(username).set({\n            password: password,\n            name: nameUser\n        });\n        setTimeout(function(){\n            setUsername(\"\")\n            setPassword(\"\")\n            setNameUser(\"\")\n            window.alert(\"Success\")\n            window.location.reload()\n        }, 500);\n        return true\n    }\n    \n    const [lists , setLists] = useState([])\n\n    const readUser = (e) => {\n        e.preventDefault()\n        const tmpLists = []\n        userCollection.get()\n            .then(function(querySnapshot) {\n                querySnapshot.forEach(function(doc) {\n                const taskformat = {\n                    username : doc.id,\n                    password : doc.data().password,\n                    name : doc.data().name\n                }\n                tmpLists.push(taskformat)\n            });\n        });\n        \n        setTimeout(function(){\n            setLists(tmpLists)\n            window.alert(\"Success\")\n        }, 500);\n    }\n\n    const deleteItem = (e) =>{\n        console.log(e)\n        userCollection.doc(e).delete()\n        setTimeout(function(){\n            window.alert(\"Delete Success!\")\n            window.location.reload()\n        }, 500);\n    }\n\n    return (\n        <div>\n            <header class=\"header-admin\">\n                <div class=\"brand-box\">\n                    <span class=\"brand\">Admin</span>\n                </div>\n                <div class=\"text-box\">\n                    <h1 class=\"heading-primary\">\n                        <span class=\"heading-primary-main\">Management</span>\n                        <span class=\"heading-primary-sub\">User</span>\n                        <a href=\"#\" class=\"btn btn-white btn-animated\" onClick={readUser}>Get User</a>\n                    </h1>\n                    <center>\n                    <h5 class=\"heading-primary\">\n                        <table>\n                            <tr>\n                              <th>Username</th>\n                              <th>Password</th>\n                              <th>Name</th>\n                              <th>Delete</th>\n                            </tr>\n                        {\n                            lists.map((Item) => {\n                                return(\n                                    <tr key={Item.username}>\n                                        <td>{Item.username}</td>\n                                        <td>{Item.password}</td>\n                                        <td>{Item.name}</td>\n                                        <button  onClick={() => deleteItem(Item.username)}>delete</button>\n                                    </tr>\n                                )\n                            })\n                        }\n                        </table>\n                    </h5>\n                    </center>\n                    <h1>\n                        <input type=\"text\" class=\"input-admin\" id=\"Username\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)} required=\"\"/>\n                        <input type=\"password\" class=\"input-admin\" id=\"Password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} required=\"\"/>\n                        <input type=\"text\" class=\"input-admin\" id=\"Name\" placeholder=\"Name\" value={nameUser} onChange={(e) => setNameUser(e.target.value)} required=\"\"/>\n                        <div><a href=\"#\" class=\"btn btn-white btn-animated\" onClick = {setUsers}>Add/Update</a></div>\n                    </h1>\n                    <a href=\"/UserSetupPage\" class=\"btn btn-white btn-animated\">User</a>\n                    <a href=\"/StockSetupPage\" class=\"btn btn-white btn-animated\">Stock</a>\n                    <a href=\"/OrderSetupPage\" class=\"btn btn-white btn-animated\">Order</a>\n                    <a href=\"/\" class=\"btn btn-white btn-animated\">Logout</a>\n                </div>\n            </header>\n        </div>\n    )\n}","import React from 'react';\nimport { BrowserRouter,Route } from 'react-router-dom'\nimport HomePage from './components/HomePage'\nimport AdminPage from './components/AdminPage'\nimport OrderSetupPage from './components/OrderSetupPage'\nimport StockSetupPage from './components/StockSetupPage'\nimport UserSetupPage from './components/UserSetupPage'\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Route exact path = \"/\" component = {HomePage}/>\n      <Route path=\"/AdminPage\" component = {AdminPage}/>\n      <Route path=\"/OrderSetupPage\" component = {OrderSetupPage}/>\n      <Route path=\"/StockSetupPage\" component = {StockSetupPage}/>\n      <Route path=\"/UserSetupPage\" component = {UserSetupPage}/>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useCallback } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './firebase'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}